commit cbc4ac264e9671898bff6ec7e434da3eca4bd273
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Thu Apr 16 10:39:22 2020 +0300

    params: release Geth v1.9.13

commit 359d9c3f0a51fb80214e5e0cb1142df469421b45
Merge: 6402c42b6 d77d35a4a
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Apr 15 18:25:54 2020 +0300

    Merge pull request #20925 from karalabe/cht-1.9.13
    
    params: update CHTs for the 1.9.13 release

commit d77d35a4a943bac035d7b380d29483ddc1259e8a
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Apr 15 18:03:10 2020 +0300

    params: update CHTs for the 1.9.13 release

commit 6402c42b6748c0e8494e6432f40fe4527650076b
Author: Martin Holst Swende <martin@swende.se>
Date:   Wed Apr 15 13:08:53 2020 +0200

    all: simplify and fix database iteration with prefix/start (#20808)
    
    * core/state/snapshot: start fixing disk iterator seek
    
    * ethdb, rawdb, leveldb, memorydb: implement iterators with prefix and start
    
    * les, core/state/snapshot: iterator fixes
    
    * all: remove two iterator methods
    
    * all: rename Iteratee.NewIteratorWith -> NewIterator
    
    * ethdb: fix review concerns

commit 00064ddcfb76c194997c261ca85486b2c8fd8784
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Wed Apr 15 15:23:58 2020 +0800

    accounts/abi: implement new fallback functions (#20764)
    
    * accounts/abi: implement new fackball functions
    
    In Solidity v0.6.0, the original fallback is separated
    into two different sub types: fallback and receive.
    
    This PR addes the support for parsing new format abi
    and the relevant abigen functionalities.
    
    * accounts/abi: fix unit tests
    
    * accounts/abi: minor fixes
    
    * accounts/abi, mobile: support jave binding
    
    * accounts/abi: address marius's comment
    
    * accounts/abi: Work around the uin64 conversion issue
    
    Co-authored-by: Guillaume Ballet <gballet@gmail.com>

commit 2a836bb259c03626e5ef8435f99f341ea911bfff
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Tue Apr 14 17:13:47 2020 +0200

    core/rawdb: fix data race between Retrieve and Close (#20919)
    
    * core/rawdb: fixed data race between retrieve and close
    
    closes https://github.com/ethereum/go-ethereum/issues/20420
    
    * core/rawdb: use non-atomic load while holding mutex

commit eb2fd823b2fd8d6745cceb25de19fde0acd53d23
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Tue Apr 14 14:03:18 2020 +0300

    travis, appveyor, build, Dockerfile: bump Go to 1.14.2 (#20913)
    
    * travis, appveyor, build, Dockerfile: bump Go to 1.14.2
    
    * travis, appveyor: force GO111MODULE=on for every build

commit 5a20cc0de6f58f09e68c13154702b278b7aeeedf
Author: ligi <ligi@ligi.de>
Date:   Tue Apr 14 10:08:27 2020 +0200

    README: update min go version to 1.13 (#20911)

commit 0851646e480f3fff0d6cdd900fc1034960b993f0
Author: Zsolt Felföldi <zsfelfoldi@gmail.com>
Date:   Thu Apr 9 11:55:32 2020 +0200

    les, les/lespay/client: add service value statistics and API (#20837)
    
    This PR adds service value measurement statistics to the light client. It
    also adds a private API that makes these statistics accessible. A follow-up
    PR will add the new server pool which uses these statistics to select
    servers with good performance.
    
    This document describes the function of the new components:
    https://gist.github.com/zsfelfoldi/3c7ace895234b7b345ab4f71dab102d4
    
    Co-authored-by: rjl493456442 <garyrong0905@gmail.com>
    Co-authored-by: rjl493456442 <garyrong0905@gmail.com>

commit 15540ae9928441a38f8af47d8227347e6bada5ae
Author: Raw Pong Ghmoa <58883403+q9f@users.noreply.github.com>
Date:   Thu Apr 9 11:09:58 2020 +0200

    cmd: deprecate --testnet, use named networks instead (#20852)
    
    * cmd/utils: make goerli the default testnet
    
    * cmd/geth: explicitly rename testnet to ropsten
    
    * core: explicitly rename testnet to ropsten
    
    * params: explicitly rename testnet to ropsten
    
    * cmd: explicitly rename testnet to ropsten
    
    * miner: explicitly rename testnet to ropsten
    
    * mobile: allow for returning the goerli spec
    
    * tests: explicitly rename testnet to ropsten
    
    * docs: update readme to reflect changes to the default testnet
    
    * mobile: allow for configuring goerli and rinkeby nodes
    
    * cmd/geth: revert --testnet back to ropsten and mark as legacy
    
    * cmd/util: mark --testnet flag as deprecated
    
    * docs: update readme to properly reflect the 3 testnets
    
    * cmd/utils: add an explicit deprecation warning on startup
    
    * cmd/utils: swap goerli and ropsten in usage
    
    * cmd/geth: swap goerli and ropsten in usage
    
    * cmd/geth: if running a known preset, log it for convenience
    
    * docs: improve readme on usage of ropsten's testnet datadir
    
    * cmd/utils: check if legacy `testnet` datadir exists for ropsten
    
    * cmd/geth: check for legacy testnet path in console command
    
    * cmd/geth: use switch statement for complex conditions in main
    
    * cmd/geth: move known preset log statement to the very top
    
    * cmd/utils: create new ropsten configurations in the ropsten datadir
    
    * cmd/utils: makedatadir should check for existing testnet dir
    
    * cmd/geth: add legacy testnet flag to the copy db command
    
    * cmd/geth: add legacy testnet flag to the inspect command

commit 023b87b9d18b9fbcc659af37d64870c0ba216cdd
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Thu Apr 9 10:54:57 2020 +0200

    accounts/abi/bind: fixed erroneous filtering of negative ints (#20865)
    
    * accounts/abi/bind: fixed erroneous packing of negative ints
    
    * accounts/abi/bind: added test cases for negative ints in topics
    
    * accounts/abi/bind: fixed genIntType for go 1.12
    
    * accounts/abi: minor  nitpick

commit 1bad8612229ef40998b263ff36b6ecee9a7859e5
Author: rene <41963722+renaynay@users.noreply.github.com>
Date:   Wed Apr 8 16:58:27 2020 +0200

    changed date of rpcstack.go since new file (#20904)

commit fe9ffa5953a28d570478ac61238218a195fe0ccb
Author: Adam Schmideg <adamschmideg@users.noreply.github.com>
Date:   Wed Apr 8 16:01:11 2020 +0200

    crypto: improve error messages in LoadECDSA (#20718)
    
    This improves error messages when the file is too short or too long.
    Also rewrite the test for SaveECDSA because LoadECDSA has its own
    test now.
    
    Co-authored-by: Felix Lange <fjl@twurst.com>

commit 07d909ff3283fb50a1312a1919787768e54a1c81
Author: rene <41963722+renaynay@users.noreply.github.com>
Date:   Wed Apr 8 13:33:12 2020 +0200

    node: allow websocket and HTTP on the same port (#20810)
    
    This change makes it possible to run geth with JSON-RPC over HTTP and
    WebSocket on the same TCP port. The default port for WebSocket
    is still 8546.
    
        geth --rpc --rpcport 8545 --ws --wsport 8545
    
    This also removes a lot of deprecated API surface from package rpc.
    The rpc package is now purely about serving JSON-RPC and no longer
    provides a way to start an HTTP server.

commit 5065cdefffbd401e97dd89075081485c4fa4b774
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Wed Apr 8 12:00:10 2020 +0200

    accounts/abi/bind: Refactored topics  (#20851)
    
    * accounts/abi/bind: refactored topics
    
    * accounts/abi/bind: use store function to remove code duplication
    
    * accounts/abi/bind: removed unused type defs
    
    * accounts/abi/bind: error on tuples in topics
    
    * Cosmetic changes to restart travis build
    
    Co-authored-by: Guillaume Ballet <gballet@gmail.com>

commit 6975172d01292e29c9404eb3322c4629802fe02c
Author: ucwong <ucwong@126.com>
Date:   Wed Apr 8 17:26:16 2020 +0800

    whisper/mailserver : recover corrupt db files before opening (#20891)
    
    * whisper/mailserver : recover db file when openfile corrupted
    
    * whisper/mailserver : fix db -> s.db
    
    * whisper/mailserver : common/errors for dbfile

commit c8e9a91672ce27d3c82a579a14d840bd6a04049f
Author: Felix Lange <fjl@twurst.com>
Date:   Wed Apr 8 10:07:29 2020 +0200

    build: upgrade to golangci-lint 1.24.0 (#20901)
    
    * accounts/scwallet: remove unnecessary uses of fmt.Sprintf
    
    * cmd/puppeth: remove unnecessary uses of fmt.Sprintf
    
    * p2p/discv5: remove unnecessary use of fmt.Sprintf
    
    * whisper/mailserver: remove unnecessary uses of fmt.Sprintf
    
    * core: goimports -w tx_pool_test.go
    
    * eth/downloader: goimports -w downloader_test.go
    
    * build: upgrade to golangci-lint 1.24.0

commit b7394d79428d395a6fca0567659cdcd4d808bee2
Author: Felix Lange <fjl@twurst.com>
Date:   Wed Apr 8 09:57:23 2020 +0200

    p2p/discover: add initial discovery v5 implementation (#20750)
    
    This adds an implementation of the current discovery v5 spec.
    
    There is full integration with cmd/devp2p and enode.Iterator in this
    version. In theory we could enable the new protocol as a replacement of
    discovery v4 at any time. In practice, there will likely be a few more
    changes to the spec and implementation before this can happen.

commit 671f22be3888aa9d056e0798508c42420638cb1f
Author: rene <41963722+renaynay@users.noreply.github.com>
Date:   Tue Apr 7 14:37:24 2020 +0200

    couple of fixes to docs in clef (#20900)

commit 6a3daa2a4ecf814578fd8f3fca5850a8f0252ac8
Author: Adam Schmideg <adamschmideg@users.noreply.github.com>
Date:   Tue Apr 7 12:16:35 2020 +0200

    .github: change gitter reference to discord link in issue template (#20896)

commit 094996b8c96047564c541e4ffe50bd9b6a470e96
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Apr 7 12:15:28 2020 +0200

    docs/audits: add discv5 protocol audits from LA and C53 (#20898)

commit 8dc89415511ec0d5f8b0128e9ef9fb624ddb5d56
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Apr 7 11:45:21 2020 +0200

    core/vm: use a callcontext struct (#20761)
    
    * core/vm: use a callcontext struct
    
    * core/vm: fix tests
    
    * core/vm/runtime: benchmark
    
    * core/vm: make intpool push inlineable, unexpose callcontext

commit 0bec6a43f68ec5eb608303c346985d38c7c7e1fb
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Apr 7 10:23:57 2020 +0200

    cmd/geth: enable metrics for geth import command (#20738)
    
    * cmd/geth: enable metrics for geth import command
    
    * cmd/geth: enable metrics-flags for import command

commit f0b5eb09eb30545b11ad5c0179517fc2159ad02d
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Tue Apr 7 14:16:21 2020 +0800

    eth, les: fix flaky tests (#20897)
    
    * les: fix flaky test
    
    * eth: fix flaky test

commit 3cf7d2e9a6605bef8140b01483d65da874e11a8a
Author: William Morriss <wjmelements@gmail.com>
Date:   Fri Apr 3 11:10:53 2020 -0700

    internal/ethapi: add CallArgs.ToMessage method (#20854)
    
    ToMessage is used to convert between ethapi.CallArgs and types.Message.
    It reduces the length of the DoCall method by about half by abstracting out
    the conversion between the CallArgs and the Message. This should improve the
    code's maintainability and reusability.

commit be6078ad831dea01121510dfc9ab1f264a3a189c
Author: Boqin Qin <Bobbqqin@gmail.com>
Date:   Sat Apr 4 02:07:22 2020 +0800

    all: fix a bunch of inconsequential goroutine leaks (#20667)
    
    The leaks were mostly in unit tests, and could all be resolved by
    adding suitably-sized channel buffers or by restructuring the test
    to not send on a channel after an error has occurred.
    
    There is an unavoidable goroutine leak in Console.Interactive: when
    we receive a signal, the line reader cannot be unblocked and will get
    stuck. This leak is now documented and I've tried to make it slightly
    less bad by adding a one-element buffer to the output channels of
    the line-reading loop. Should the reader eventually awake from its
    blocked state (i.e. when stdin is closed), at least it won't get stuck
    trying to send to the interpreter loop which has quit long ago.
    
    Co-authored-by: Felix Lange <fjl@twurst.com>

commit 98eab2dbe7f2c0b4d6ae73ec61d1e5b2e600e0db
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Fri Apr 3 14:11:04 2020 +0200

    mobile: use bind.NewKeyedTransactor instead of duplicating (#20888)
    
    It's better to reuse the existing code to create a keyed transactor
    than to rewrite the logic again.

commit be9172a7ac5cf8a6919a36213531c51ecb5cc6ef
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Fri Apr 3 18:36:44 2020 +0800

    rpc: metrics for JSON-RPC method calls (#20847)
    
    This adds a couple of metrics for tracking the timing
    and frequency of method calls:
    
    - rpc/requests gauge counts all requests
    - rpc/success gauge counts requests which return err == nil
    - rpc/failure gauge counts requests which return err != nil
    - rpc/duration/all timer tracks timing of all requests
    - rpc/duration/<method>/<success/failure> tracks per-method timing

commit 462ddce5b2a47835d057e3950ee5feb9d6c7bc10
Author: Luke Champine <luke.champine@gmail.com>
Date:   Fri Apr 3 05:57:24 2020 -0400

    crypto/ecies: improve concatKDF (#20836)
    
    This removes a bunch of weird code around the counter overflow check in
    concatKDF and makes it actually work for different hash output sizes.
    
    The overflow check worked as follows: concatKDF applies the hash function N
    times, where N is roundup(kdLen, hashsize) / hashsize. N should not
    overflow 32 bits because that would lead to a repetition in the KDF output.
    
    A couple issues with the overflow check:
    
    - It used the hash.BlockSize, which is wrong because the
      block size is about the input of the hash function. Luckily, all standard
      hash functions have a block size that's greater than the output size, so
      concatKDF didn't crash, it just generated too much key material.
    - The check used big.Int to compare against 2^32-1.
    - The calculation could still overflow before reaching the check.
    
    The new code in concatKDF doesn't check for overflow. Instead, there is a
    new check on ECIESParams which ensures that params.KeyLen is < 512. This
    removes any possibility of overflow.
    
    There are a couple of miscellaneous improvements bundled in with this
    change:
    
    - The key buffer is pre-allocated instead of appending the hash output
      to an initially empty slice.
    - The code that uses concatKDF to derive keys is now shared between Encrypt
      and Decrypt.
    - There was a redundant invocation of IsOnCurve in Decrypt. This is now removed
      because elliptic.Unmarshal already checks whether the input is a valid curve
      point since Go 1.5.
    
    Co-authored-by: Felix Lange <fjl@twurst.com>

commit f7b29ec942d91aee420d89d976ed94257398764e
Author: ucwong <ucwong@126.com>
Date:   Fri Apr 3 04:08:45 2020 +0800

    rpc: add missing timer.Stop calls in websocket tests (#20863)

commit f98cabad7cea07a96f80c7b68efc10ff08d483f4
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 22:04:45 2020 +0800

    core: add missing Timer.Stop call in TestLogReorgs (#20870)

commit 0c359e4b9a3f3418245ed8ef131e2ea4e4bab792
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 22:03:40 2020 +0800

     p2p/discv5, p2p/testing: add missing Timer.Stop calls in tests (#20869)

commit 37d6357806f49071cad5ab2043545b05eebdb7ee
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 22:02:10 2020 +0800

    ethstats: add missing Ticker.Stop call (#20867)

commit 53e034ce0be31155bf0b982ac02fbffc0924fc79
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 22:01:18 2020 +0800

    metrics: add missing calls to Ticker.Stop in tests (#20866)

commit 0893ee6d519cb5cffb56c480020051d25728a734
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 21:56:25 2020 +0800

    event: add missing timer.Stop call in TestFeed (#20868)

commit 4d891f23b5a03ab8a8f64dd1683018942a5c7b0a
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 21:54:59 2020 +0800

    les: add missing Ticker.Stop call (#20864)

commit 66ed58bfcc2658e2ef60521c04701fb8e0455bcb
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 18:32:45 2020 +0800

    eth/fetcher: add missing timer.Stop calls (#20861)

commit 47f7c736cb4872be272f978b9bfade33bff3f0f1
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 18:31:50 2020 +0800

    eth/filters: add missing Ticker.Stop call (#20862)

commit 228a2970566261df7f86764ca94cb6a670500064
Author: Martin Holst Swende <martin@swende.se>
Date:   Thu Apr 2 12:27:44 2020 +0200

    cmd/geth: fix bad genesis test (#20860)

commit ad4b60efdd5f1827872f110a6c8e39e60e45fb4f
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 16:40:38 2020 +0800

    miner/worker: add missing timer.Stop call (#20857)

commit c87cdd30532f5512c8335fd13204f57e11263427
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 16:11:16 2020 +0800

    p2p/discv5: add missing Timer.Stop calls (#20853)

commit f15849cf00ddc21137886e582cc064e80ee8c47e
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Wed Apr 1 18:46:53 2020 +0200

    accounts/abi faster unpacking of int256 (#20850)

commit bf35e27ea76ea50515e3f345a9ac05ec558ffabf
Author: ucwong <ucwong@126.com>
Date:   Thu Apr 2 00:00:33 2020 +0800

    p2p/server: add UDP port mapping goroutine to wait group (#20846)

commit 1e2e1b41f8cf0c51f53dd064a4caa75faee14065
Author: ucwong <ucwong@126.com>
Date:   Wed Apr 1 22:12:01 2020 +0800

    cmd/devp2p, cmd/wnode, whisper: add missing calls to Timer.Stop (#20843)

commit d56dc038d2a89c8b11d5ca5630c32114ccaef836
Author: Paweł Bylica <chfast@gmail.com>
Date:   Wed Apr 1 12:40:07 2020 +0200

    cmd/evm: Rework execution stats (#20792)
    
    - Dump stats also for --bench flag.
    - From memory stats only show number and size of allocations. This is what `test -bench` shows. I doubt others like number of GC runs are any useful, but can be added if requested.
    - Now the mem stats are for single execution in case of --bench.

commit a5a9feab21cf5af36f2790bc4c5d928e4c7b7608
Author: ucwong <ucwong@126.com>
Date:   Wed Apr 1 17:35:26 2020 +0800

    whisper: fix whisper go routine leak with sync wait group (#20844)

commit f0be151349cb1440d119d3c033936e22bcb0724a
Author: Jeff Wentworth <jeff@curvegrid.com>
Date:   Wed Apr 1 01:14:42 2020 +0900

    README: update private network genesis spec with istanbul (#20841)
    
    * add istanbul and muirGlacier to genesis states in README
    
    * remove muirGlacier, relocate istanbul

commit f78ffc0545f577af9c8f94c5f940a1d5a6ea90bf
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Tue Mar 31 23:17:24 2020 +0800

    les: create utilities as common package (#20509)
    
    * les: move execqueue into utilities package
    
    execqueue is a util for executing queued functions
    in a serial order which is used by both les server
    and les client. Move it to common package.
    
    * les: move randselect to utilities package
    
    weighted_random_selector is a helpful tool for randomly select
    items maintained in a set but based on the item weight.
    
    It's used anywhere is LES package, mainly by les client but will
    be used in les server with very high chance. So move it into a
    common package as the second step for les separation.
    
    * les: rename to utils

commit 32d31c31afdd17a8ce71985c1a760caf0d2916e5
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Mar 31 15:01:16 2020 +0200

    metrics: improve TestTimerFunc (#20818)
    
    The test failed due to what appears to be fluctuations in time.Sleep, which is
    not the actual method under test. This change modifies it so we compare the
    metered Max to the actual time instead of the desired time.

commit 3b69c14f5d48d583f240cdbdc38818a47ec6761d
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Mar 31 12:10:34 2020 +0200

    whisper/whisperv6: decrease pow requirement in tests (#20815)

commit 300c35b8542a2d9586aab91b152d3970346018e1
Author: Adam Schmideg <adamschmideg@users.noreply.github.com>
Date:   Tue Mar 31 12:09:45 2020 +0200

    travis: allow cocoapods deploy to fail (#20833)

commit 03fe9de2cb87716dbabfecfb7e9bf1083d901e38
Author: Wenbiao Zheng <delweng@gmail.com>
Date:   Tue Mar 31 18:08:44 2020 +0800

    eth: add debug_accountRange API (#19645)
    
    This new API allows reading accounts and their content by address range.
    
    Co-authored-by: Martin Holst Swende <martin@swende.se>
    Co-authored-by: Felix Lange <fjl@twurst.com>

commit c56f4fa808c218e7e69837596d31aa9e444666a8
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Mar 31 12:03:48 2020 +0200

    cmd/clef: add newaccount command (#20782)
    
    * cmd/clef: add newaccount command
    
    * cmd/clef: document clef_New, update API versioning
    
    * Update cmd/clef/intapi_changelog.md
    
    Co-Authored-By: ligi <ligi@ligi.de>
    
    * Update signer/core/uiapi.go
    
    Co-Authored-By: ligi <ligi@ligi.de>
    
    Co-authored-by: ligi <ligi@ligi.de>

commit 8f05cfa1227c3d013ec86ec24c336731768ef22b
Author: Hanjiang Yu <42531996+de1acr0ix@users.noreply.github.com>
Date:   Tue Mar 31 16:44:04 2020 +0800

    cmd, consensus: add option to disable mmap for DAG caches/datasets (#20484)
    
    * cmd, consensus: add option to disable mmap for DAG caches/datasets
    
    * consensus: add benchmarks for mmap with/with lock

commit 76eed9e50d65e014acf0828588ed8f6ce1777f8d
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Mar 31 10:25:41 2020 +0200

    snapshotter/tests: verify snapdb post-state against trie (#20812)
    
    * core/state/snapshot: basic trie-to-hash implementation
    
    * tests: validate snapshot after test
    
    * core/state/snapshot: fix review concerns

commit 84f497552092e2d061c8636b58737bc462ba4a3d
Merge: 5d7e5b00b 55a73f556
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Mar 30 12:14:53 2020 +0300

    Merge pull request #20835 from holiman/bump
    
    core: bump txpool tx max size to 128KB

commit 55a73f556a67f496fbc78943929d91ce9832761e
Author: Martin Holst Swende <martin@swende.se>
Date:   Mon Mar 30 10:46:05 2020 +0200

    core: bump txpool tx max size to 128KB

commit 5d7e5b00be3eb04a334366d78b6ab742772c8e0a
Author: Ha ĐANG <dvietha@gmail.com>
Date:   Fri Mar 27 22:33:14 2020 +0700

    eth/filters: fix typo on unindexedLogs function's comment (#20827)

commit 62cd943c7bfefd810ed8175703f79224f8a2f77b
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Fri Mar 27 23:21:58 2020 +0800

    les: fix dead lock (#20828)

commit d6c5f2417c03e802f312d86fc40f33b53803c3eb
Author: Felix Lange <fjl@twurst.com>
Date:   Fri Mar 27 14:03:20 2020 +0100

    eth: improve shutdown synchronization (#20695)
    
    * eth: improve shutdown synchronization
    
    Most goroutines started by eth.Ethereum didn't have any shutdown sync at
    all, which lead to weird error messages when quitting the client.
    
    This change improves the clean shutdown path by stopping all internal
    components in dependency order and waiting for them to actually be
    stopped before shutdown is considered done. In particular, we now stop
    everything related to peers before stopping 'resident' parts such as
    core.BlockChain.
    
    * eth: rewrite sync controller
    
    * eth: remove sync start debug message
    
    * eth: notify chainSyncer about new peers after handshake
    
    * eth: move downloader.Cancel call into chainSyncer
    
    * eth: make post-sync block broadcast synchronous
    
    * eth: add comments
    
    * core: change blockchain stop message
    
    * eth: change closeBloomHandler channel type

commit d7851e635936dc71f649b8836d0afa2e8764edd6
Author: rene <41963722+renaynay@users.noreply.github.com>
Date:   Fri Mar 27 13:52:53 2020 +0100

    graphql, node, rpc: fix typos in comments (#20824)

commit d3c1e654f06a38cb1d78cab0503d872e4ca56bec
Author: Felix Lange <fjl@twurst.com>
Date:   Thu Mar 26 23:55:33 2020 +0100

    cmd/devp2p: be very correct about route53 change splitting (#20820)
    
    Turns out the way RDATA limits work is documented after all,
    I just didn't search right. The trick to make it work is to
    count UPSERTs twice.
    
    This also adds an additional check to ensure TTL changes are
    applied on existing records.

commit 87a411b839dc770460cd152cf2e7e6d40729709a
Author: Felix Lange <fjl@twurst.com>
Date:   Thu Mar 26 16:39:56 2020 +0100

    cmd/devp2p: lower route53 change limit again (#20819)

commit 1583e7d2744af796aa85159217e80ca146097302
Author: Felix Lange <fjl@twurst.com>
Date:   Thu Mar 26 12:51:50 2020 +0100

    cmd/devp2p: tweak DNS TTLs (#20801)
    
    * cmd/devp2p: tweak DNS TTLs
    
    * cmd/devp2p: bump treeNodeTTL to four weeks

commit 4690912ac9742568df6c0cf75cf96ffc0838a9d3
Merge: 39f502329 42e02ac03
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Thu Mar 26 13:15:43 2020 +0200

    Merge pull request #20816 from karalabe/disable-gosigar-ios
    
    metrics: disable CPU stats (gosigar) on iOS

commit 42e02ac03bfc4e01496d15314e94f46260d98f86
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Thu Mar 26 11:24:01 2020 +0200

    metrics: disable CPU stats (gosigar) on iOS

commit 39f502329fac4640cfb71959c3496f19ea88bc85
Author: Martin Holst Swende <martin@swende.se>
Date:   Mon Mar 23 18:21:23 2020 +0100

    internal/ethapi: don't set sender-balance to maxuint, fixes #16999 (#20783)
    
    Prior to this change, eth_call changed the balance of the sender account in the
    EVM environment to 2^256 wei to cover the gas cost of the call execution.
    We've had this behavior for a long time even though it's super confusing.
    
    This commit sets the default call gasprice to zero instead of updating the balance,
    which is better because it makes eth_call semantics less surprising. Removing
    the built-in balance assignment also makes balance overrides work as expected.

commit 0734c4b82050fd8114bb18514191cb5c7ccf5259
Author: Martin Holst Swende <martin@swende.se>
Date:   Mon Mar 23 16:26:56 2020 +0100

    node, cmd/clef: report actual port used for http rpc (#20789)

commit a75c0610b7aad63de01cefeeaf3426b332e718eb
Author: meowsbits <45600330+meowsbits@users.noreply.github.com>
Date:   Mon Mar 23 09:05:15 2020 -0500

    core/blockchain: simplify atomic store after writeBlockWithState (#20798)
    
    Signed-off-by: meows <b5c6@protonmail.com>

commit 613af7ceea0f94b92f0e63e8db3a5f5926421087
Merge: 93ffb85b3 074efe6c8
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Mar 23 12:57:31 2020 +0200

    Merge pull request #20152 from karalabe/snapshot-5
    
    Dynamic state snapshots

commit 074efe6c8dfe879adb26f60a8a9554fdf9da1907
Author: Martin Holst Swende <martin@swende.se>
Date:   Fri Mar 6 13:05:44 2020 +0100

    core: fix two snapshot iterator flaws, decollide snap storage prefix
    
    * core/state/snapshot/iterator: fix two disk iterator flaws
    
    * core/rawdb: change SnapshotStoragePrefix to avoid prefix collision with preimagePrefix

commit 93ffb85b3d3874d08beb2127e70a278444eaec93
Author: meowsbits <45600330+meowsbits@users.noreply.github.com>
Date:   Sat Mar 21 09:28:27 2020 -0500

    rpc: dont log an error if user configures --rpcapi=rpc... (#20776)
    
    This just prevents a false negative ERROR warning when, for some unknown
    reason, a user attempts to turn on the module rpc even though it's already going
    to be on.

commit e943f07a858b2eb3a47fbee32cd2d5b6c19ed0da
Author: Guillaume Ballet <gballet@gmail.com>
Date:   Fri Mar 20 09:37:53 2020 +0100

    whisper/whisperv6: delete failing tests (#20788)
    
    These tests occasionally fail on Travis.

commit 0e6ea9199ca701ee4c96220e873884327c8d18ff
Merge: 36e93d2dd e6ca1958d
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Thu Mar 19 10:06:44 2020 +0200

    Merge pull request #20781 from karalabe/fix-clique-console-apis
    
    internal/web3ext: fix clique console apis to work on missing arguments

commit 36e93d2dd8c0ba705036de70b58edd133d10dd36
Merge: 4655b6099 20a092fb9
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Mar 18 16:30:58 2020 +0200

    Merge pull request #20779 from meowsbits/patch-3
    
    core/rawdb: fix freezer table test error check

commit e6ca1958d3a2d93321e380e04a0d91bccc2e44e6
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Mar 18 15:23:16 2020 +0200

    internal/web3ext: fix clique console apis to work on missing arguments

commit 4655b60999b91d3d35d52e4526074ce903deaac9
Merge: 6283391c9 dc6e98d2a
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Mar 18 15:08:06 2020 +0200

    Merge pull request #20780 from karalabe/fix-eth-mine-sync-race
    
    eth: when triggering a sync, check the head header TD, not block

commit dc6e98d2a8a084b0535f729587fb134e1715b3d7
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Mar 18 14:17:12 2020 +0200

    eth: when triggering a sync, check the head header TD, not block

commit 6283391c9939d71934520200dd6ef9e77920d3ab
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Wed Mar 18 20:15:49 2020 +0800

    core/rawdb: improve table database (#20703)
    
    This PR fixes issues in TableDatabase.
    
    TableDatabase is a wrapper of underlying ethdb.Database with an additional prefix.
    The prefix is applied to all entries it maintains. However when we try to retrieve entries
    from it we don't handle the key properly. In theory the prefix should be truncated and
    only user key is returned. But we don't do it in some cases, e.g. the iterator and batch
    replayer created from it. So this PR is the fix to these issues.

commit 20a092fb9fac68a1835b7a98e2e3a0e96a138ef6
Author: meowsbits <45600330+meowsbits@users.noreply.github.com>
Date:   Wed Mar 18 06:55:30 2020 -0500

    core/rawdb: fix freezer table test error check
    
    Fixes: Condition is always 'false' because 'err' is always 'nil'

commit 5dd0cd12ec05bd2ced2ab1317168b0b991344fc2
Author: Alex Willmer <alex@moreati.org.uk>
Date:   Wed Mar 18 09:52:07 2020 +0000

    go.mod: update duktape to fix sprintf warnings (#20777)
    
    This revision of go-duktype fixes the following warning
    
    ```
    duk_logging.c: In function ‘duk__logger_prototype_log_shared’:
    duk_logging.c:184:64: warning: ‘Z’ directive writing 1 byte into a region of size between 0 and 9 [-Wformat-overflow=]
      184 |  sprintf((char *) date_buf, "%04d-%02d-%02dT%02d:%02d:%02d.%03dZ",
          |                                                                ^
    In file included from /usr/include/stdio.h:867,
                     from duk_logging.c:5:
    /usr/include/x86_64-linux-gnu/bits/stdio2.h:36:10: note: ‘__builtin___sprintf_chk’ output between 25 and 85 bytes into a destination of size 32
       36 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
          |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       37 |       __bos (__s), __fmt, __va_arg_pack ());
          |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ```

commit efd92d81a9655a5aed17cc433d1f8d2c9dcce25c
Author: Gary Rong <garyrong0905@gmail.com>
Date:   Wed Mar 18 17:18:14 2020 +0800

    cmd/checkpoint-admin: add some documentation (#20697)

commit 8d7aa9078f8a94c2c10b1d11e04242df0ea91e5b
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Mar 16 13:44:58 2020 +0200

    params: begin v1.9.13 release cycle

commit fab0ee3bfad9c685064dc12a210479a196e1cb3c
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Mar 4 15:06:04 2020 +0200

    core/state/snapshot: fix various iteration issues due to destruct set

commit bc5d742c664245879ee80ecd968009b56f3e758c
Author: Martin Holst Swende <martin@swende.se>
Date:   Wed Mar 4 13:39:27 2020 +0100

    core: more blockchain tests

commit eff7cfbb03b74816513d415c0ecfe93ae83f4096
Author: Martin Holst Swende <martin@swende.se>
Date:   Wed Mar 4 13:38:55 2020 +0100

    core/state/snapshot: handle deleted accounts in fast iterator

commit 328de180a7172d2fc2894be11ad10548ef9d27e0
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Mar 4 10:19:53 2020 +0200

    core/state: fix resurrection state clearing and access

commit dcb22a9f99b19bb6b6d27cdba754ad740dc426c5
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Tue Mar 3 16:55:06 2020 +0200

    core/state: fix account root hash update point